## h:inputText

Renders an HTML `input` element of type `text`.

### Attributes

| Name             | Required | Type            | Description                                        |
| ---------------- | -------- | --------------- | -------------------------------------------------- |
@include-doc docs/common/attr-common.txt
@include-doc docs/common/attr-converter.txt
@include-doc docs/common/attr-style.txt
@include-doc docs/common/attr-lang.txt
@include-doc docs/common/attr-on-events.txt
@include-doc docs/common/attr-input.txt
@include-doc docs/common/attr-key.txt
| maxlength        | false    | Natural          | The maximum number of characters that may be entered in this field. |
| size             | false    | Natural          | The number of characters used to determine the width of this field. |
| redisplay        | false    | Boolean          | Flag indicating that any existing value in this field should be rendered when the form is created. Because this is a potential security risk, password values are not displayed by default. |
| readonly         | false    | Boolean          | Flag indicating that this component will prohibit changes by the user. The element may receive focus unless it has also been disabled. A value of false causes no attribute to be rendered, while a value of true causes the attribute to be rendered as readonly="readonly". |
| disabled         | false    | Boolean          | Flag indicating that this element must never receive focus or be included in a subsequent submit. A value of false causes no attribute to be rendered, while a value of true causes the attribute to be rendered as disabled="disabled". |
| label            | false    | String           | A localized user presentable name for this component. |


### Example

```
<div xmlns:f="http://java.sun.com/jsf/core"
     xmlns:h="http://java.sun.com/jsf/html">
    <div class="ui-widget ui-widget-header">
        Compute the volume of a cylinder
    </div>
    <h:form id='text-form'>
        <dl>
            <dt><label for='height'>Height</label></dt>
            <dd>
                <h:inputText id='height' size='10' value='#{compute.height}'
                             styleClass="ui-corner-all">
                    <f:converter converterId="float" />
                </h:inputText>
                <h:message for='height'/>
            </dd>
            <dt><label for='radius'>Radius</label></dt>
            <dd>
                <h:inputText id='radius' size='10' value='#{compute.radius}'
                             styleClass="ui-corner-all">
                    <f:converter converterId="float"/>
                </h:inputText>
                <h:message for='radius'/>
            </dd>
        </dl>
        <ul class='buttons'>
            <li>
                <h:commandButton id='run' value='Compute' action="#{compute.run}"
                                 styleClass="ui-button ui-state-default ui-corner-all"/>
            </li>
        </ul>
    </h:form>
</div>
```
